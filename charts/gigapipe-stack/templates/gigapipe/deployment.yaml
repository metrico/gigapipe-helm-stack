apiVersion: apps/v1
kind: Deployment
metadata:
  name: gigapipe
  labels:
    app.kubernetes.io/name: gigapipe
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Values.gigapipe.image.tag | default .Chart.AppVersion }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.gigapipe.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: gigapipe
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: gigapipe
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      initContainers:
      - name: wait-for-clickhouse
        image: curlimages/curl:8.5.0
        command: ['sh', '-c']
        args:
          - |
            echo "Waiting for ClickHouse to be ready..."
            until curl -sf http://clickhouse-gigapipe:8123/ping | grep -q "Ok"; do
              echo "ClickHouse is not reachable yet, waiting..."
              sleep 5
            done
            echo "Checking if ClickHouse cluster is ready (keeper mode)..."
            # Check if we can execute a simple query with authentication
            until curl -sf "http://clickhouse-gigapipe:8123/?user=gigapipe&password=gigapipe" -d "SELECT 1" | grep -q "1"; do
              echo "ClickHouse cluster is not fully ready yet, waiting..."
              sleep 5
            done
            echo "ClickHouse is ready!"
      containers:
      - name: gigapipe
        image: "{{ .Values.gigapipe.image.repository }}:{{ .Values.gigapipe.image.tag }}"
        imagePullPolicy: {{ .Values.gigapipe.image.pullPolicy | default "IfNotPresent" }}
        env:
        {{- range $key, $value := .Values.gigapipe.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        ports:
        - name: http
          containerPort: 3100
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /metrics
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
        resources:
          {{- toYaml .Values.gigapipe.resources | nindent 10 }}
      {{- with .Values.gigapipe.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.gigapipe.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.gigapipe.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
